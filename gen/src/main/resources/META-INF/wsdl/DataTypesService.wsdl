<?xml version="1.0" encoding="UTF-8"?>
<definitions 
    xmlns="http://schemas.xmlsoap.org/wsdl/" 
    xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" 
    xmlns:tns="http://services.test.org/datatypes" 
    xmlns:xs="http://www.w3.org/2001/XMLSchema" 
    name="DataTypesService" 
    targetNamespace="http://services.test.org/datatypes">

  <!-- JAX-WS Customizations: Wrapper style and Async. -->
  <jaxws:bindings xmlns:jaxws="http://java.sun.com/xml/ns/jaxws">
    <jaxws:enableWrapperStyle>true</jaxws:enableWrapperStyle>
    <jaxws:enableAsyncMapping>false</jaxws:enableAsyncMapping>
  </jaxws:bindings>
  <types xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:schema 
        xmlns:jxb="http://java.sun.com/xml/ns/jaxb" 
        xmlns:swaRef="http://ws-i.org/profiles/basic/1.1/xsd" 
        xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc" 
        jxb:extensionBindingPrefixes="xjc" 
        jxb:version="1.0" 
        targetNamespace="http://services.test.org/datatypes" 
        version="1.0">
      <xs:annotation>
        <xs:appinfo>
          <jxb:globalBindings collectionType="java.util.LinkedList" fixedAttributeAsConstantProperty="true" generateIsSetMethod="false">
            <xjc:serializable uid="1"/>
          </jxb:globalBindings>
        </xs:appinfo>
      </xs:annotation> 
      <xs:import namespace="http://ws-i.org/profiles/basic/1.1/xsd" schemaLocation="http://ws-i.org/profiles/basic/1.1/swaref.xsd"/>
      <!-- Element definitions: -->
      <xs:element name="DataTypesServiceException" type="tns:ServiceFaultInfoSO"/>
      <xs:element name="mirrorCollections" type="tns:MirrorCollections"/>
      <xs:element name="mirrorCollectionsResponse" type="tns:MirrorCollectionsResponse"/>
      <xs:element name="mirrorLiterals" type="tns:MirrorLiterals"/>
      <xs:element name="mirrorLiteralsResponse" type="tns:MirrorLiteralsResponse"/>
      <xs:element name="mirrorServiceObjects" type="tns:MirrorServiceObjects"/>
      <xs:element name="mirrorServiceObjectsResponse" type="tns:MirrorServiceObjectsResponse"/>
      <xs:element name="noInputOrOutput" type="tns:NoInputOrOutput"/>
      <xs:element name="noInputOrOutputResponse" type="tns:NoInputOrOutputResponse"/>
      <xs:element name="onlyInput" type="tns:OnlyInput"/>
      <xs:element name="onlyInputResponse" type="tns:OnlyInputResponse"/>
      <xs:element name="onlyOutput" type="tns:OnlyOutput"/>
      <xs:element name="onlyOutputResponse" type="tns:OnlyOutputResponse"/>
      <xs:element name="version" type="tns:Version"/>
      <xs:element name="versionResponse" type="tns:VersionResponse"/>
      <!-- Complex types: Service Wrappers -->
      <xs:complexType name="MirrorCollections">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class name="WrapperMirrorCollections"/>
          </xs:appinfo>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="arg0" type="tns:CollectionsSO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MirrorCollectionsResponse">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class name="WrapperMirrorCollectionsResponse"/>
          </xs:appinfo>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="return" type="tns:CollectionsSO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MirrorLiterals">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class name="WrapperMirrorLiterals"/>
          </xs:appinfo>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="arg0" type="tns:LiteralsSO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MirrorLiteralsResponse">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class name="WrapperMirrorLiteralsResponse"/>
          </xs:appinfo>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="return" type="tns:LiteralsSO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MirrorServiceObjects">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class name="WrapperMirrorServiceObjects"/>
          </xs:appinfo>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="arg0" type="tns:ServiceObjectsSO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MirrorServiceObjectsResponse">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class name="WrapperMirrorServiceObjectsResponse"/>
          </xs:appinfo>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="return" type="tns:ServiceObjectsSO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NoInputOrOutput">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class name="WrapperNoInputOrOutput"/>
          </xs:appinfo>
        </xs:annotation>
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="NoInputOrOutputResponse">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class name="WrapperNoInputOrOutputResponse"/>
          </xs:appinfo>
        </xs:annotation>
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="OnlyInput">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class name="WrapperOnlyInput"/>
          </xs:appinfo>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="arg0" type="tns:SimpleAlfacodeVerklaringSO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OnlyInputResponse">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class name="WrapperOnlyInputResponse"/>
          </xs:appinfo>
        </xs:annotation>
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="OnlyOutput">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class name="WrapperOnlyOutput"/>
          </xs:appinfo>
        </xs:annotation>
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="OnlyOutputResponse">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class name="WrapperOnlyOutputResponse"/>
          </xs:appinfo>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="return" type="tns:SimpleNumcodeVerklaringSO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Version">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class name="WrapperVersion"/>
          </xs:appinfo>
        </xs:annotation>
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="VersionResponse">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class name="WrapperVersionResponse"/>
          </xs:appinfo>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="return" type="tns:VersionSO"/>
        </xs:sequence>
      </xs:complexType>
      <!-- Complex types: Service Objects -->
      <xs:complexType name="ChildSO">
        <xs:complexContent>
          <xs:extension base="tns:ParentSO">
            <xs:sequence>
              <xs:element minOccurs="0" name="root" type="tns:ServiceObjectsSO"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CollectionsSO">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class>
              <jxb:javadoc>This service object contains collections of all literal and some SO types. (default values are used for collection items that are empty or zero)</jxb:javadoc>
            </jxb:class>
          </xs:appinfo>
          <xs:documentation>This service object contains collections of all literal and some SO types. (default values are used for collection items that are empty or zero)</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns:BaseServiceObject">
            <xs:sequence>
              <xs:element default="99999999999999999999.9999999999" maxOccurs="5" minOccurs="0" name="bigDecimals" type="xs:decimal"/>
              <xs:element default="48239048894758758947904778234" maxOccurs="5" minOccurs="0" name="bigIntegers" type="xs:integer"/>
              <xs:element maxOccurs="3" minOccurs="0" name="binaryDataList" type="swaRef:swaRef"/>
              <xs:element default="true" maxOccurs="10" minOccurs="0" name="booleans" type="xs:boolean"/>
              <xs:element default="2010-01-31T23:59:59.999+01:00" maxOccurs="unbounded" minOccurs="0" name="dateTimes" type="xs:dateTime"/>
              <xs:element default="1.7976931348623157E308" maxOccurs="unbounded" minOccurs="0" name="doubles" type="xs:double"/>
              <xs:element default="MULTIPLY" maxOccurs="3" minOccurs="0" name="enums" type="tns:CalcOperation"/>
              <xs:element default="2147483647" maxOccurs="unbounded" minOccurs="0" name="integers" type="xs:int"/>
              <xs:element default="9223372036854775807" maxOccurs="unbounded" minOccurs="0" name="longs" type="xs:long"/>
              <xs:element default="hello!" maxOccurs="10" minOccurs="0" name="strings" type="xs:string"/>
              <xs:element maxOccurs="5" minOccurs="5" name="alfacodes" type="tns:SimpleAlfacodeVerklaringSO"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="recursives" type="tns:CollectionsSO"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FirstSO">
        <xs:complexContent>
          <xs:extension base="tns:BaseServiceObject">
            <xs:sequence>
              <xs:element minOccurs="0" name="second" type="tns:SecondSO"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LiteralsSO">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class>
              <jxb:javadoc>This service object contains all literal types. (both with and without default values)</jxb:javadoc>
            </jxb:class>
          </xs:appinfo>
          <xs:documentation>This service object contains all literal types. (both with and without default values)</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns:BaseServiceObject">
            <xs:sequence>
              <xs:element name="bigDecimalEmpty" type="xs:decimal"/>
              <xs:element default="4583758972492749234.288242842772384234" minOccurs="0" name="bigDecimalFilled" type="xs:decimal"/>
              <xs:element name="bigIntegerEmpty" type="xs:integer"/>
              <xs:element default="48239048894758758947904778234" minOccurs="0" name="bigIntegerFilled" type="xs:integer"/>
              <xs:element name="binaryDataEmpty" type="swaRef:swaRef"/>
              <xs:element default="This is a string to be sent as attachment.." minOccurs="0" name="binaryDataFilled" type="swaRef:swaRef"/>
              <xs:element name="booleanEmpty" type="xs:boolean"/>
              <xs:element default="false" minOccurs="0" name="booleanFalse" type="xs:boolean"/>
              <xs:element default="true" minOccurs="0" name="booleanTrue" type="xs:boolean"/>
              <xs:element name="dateTimeEmpty" type="xs:dateTime"/>
              <xs:element default="0001-01-01T00:00:00.000+01:00" minOccurs="0" name="dateTimeMinValue" type="xs:dateTime"/>
              <xs:element default="9999-12-31T23:59:59.999+01:00" minOccurs="0" name="dateTimeMaxValue" type="xs:dateTime"/>
              <xs:element name="doubleEmpty" type="xs:double"/>
              <xs:element default="4.9E-324" minOccurs="0" name="doubleMinValue" type="xs:double"/>
              <xs:element default="1.7976931348623157E308" minOccurs="0" name="doubleMaxValue" type="xs:double"/>
              <xs:element default="ADD" minOccurs="0" name="enumEmpty" type="tns:CalcOperation"/>
              <xs:element default="FALSE" minOccurs="0" name="enumFilled" type="tns:MyBoolean"/>
              <xs:element default="ERROR" minOccurs="0" name="enumExternal" type="tns:ServiceMeldingType"/>
              <xs:element name="integerEmpty" type="xs:int"/>
              <xs:element default="-2147483648" minOccurs="0" name="integerMinValue" type="xs:int"/>
              <xs:element default="2147483647" minOccurs="0" name="integerMaxValue" type="xs:int"/>
              <xs:element name="longEmpty" type="xs:long"/>
              <xs:element default="-9223372036854775808" minOccurs="0" name="longMinValue" type="xs:long"/>
              <xs:element default="9223372036854775807" minOccurs="0" name="longMaxValue" type="xs:long"/>
              <xs:element name="stringEmpty" type="xs:string"/>
              <xs:element default="hello!" minOccurs="0" name="stringFilled" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType abstract="true" name="ParentSO">
        <xs:complexContent>
          <xs:extension base="tns:BaseServiceObject">
            <xs:sequence>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SecondSO">
        <xs:complexContent>
          <xs:extension base="tns:BaseServiceObject">
            <xs:sequence>
              <xs:element minOccurs="0" name="first" type="tns:FirstSO"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ServiceObjectsSO">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class>
              <jxb:javadoc>This service object contains different service object properties and also tests the support for recursive and circular references.</jxb:javadoc>
            </jxb:class>
          </xs:appinfo>
          <xs:documentation>This service object contains different service object properties and also tests the support for recursive and circular references.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns:BaseServiceObject">
            <xs:sequence>
              <xs:element minOccurs="0" name="literals" type="tns:LiteralsSO"/>
              <xs:element minOccurs="0" name="collections" type="tns:CollectionsSO"/>
              <xs:element minOccurs="0" name="alfacode" type="tns:SimpleAlfacodeVerklaringSO"/>
              <xs:element minOccurs="0" name="numcode" type="tns:SimpleNumcodeVerklaringSO"/>
              <xs:element minOccurs="0" name="recursive" type="tns:ServiceObjectsSO"/>
              <xs:element minOccurs="0" name="firstSecondCircular" type="tns:FirstSO"/>
              <xs:element minOccurs="0" name="parentChildCircular" type="tns:ChildSO"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SimpleAlfacodeVerklaringSO">
        <xs:complexContent>
          <xs:extension base="tns:AbstractAlfacodeVerklaringSO">
            <xs:sequence>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SimpleNumcodeVerklaringSO">
        <xs:complexContent>
          <xs:extension base="tns:AbstractNumcodeVerklaringSO">
            <xs:sequence>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <!-- Imported Service Objects -->
      <xs:complexType abstract="true" name="AbstractAlfacodeVerklaringSO">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class ref="org.test.services.core.api.AbstractAlfacodeVerklaringSO">
              <jxb:javadoc>The alfaCode/verklaring SO can be used for alfanumeric codes and descriptions.</jxb:javadoc>
            </jxb:class>
          </xs:appinfo>
          <xs:documentation>The alfaCode/verklaring SO can be used for alfanumeric codes and descriptions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns:BaseServiceObject">
            <xs:sequence>
              <xs:element name="code" type="xs:string"/>
              <xs:element minOccurs="0" name="verklaring" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType abstract="true" name="AbstractNumcodeVerklaringSO">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class ref="org.test.services.core.api.AbstractNumcodeVerklaringSO">
              <jxb:javadoc>The numCode/verklaring SO can be used for numeric codes and descriptions.</jxb:javadoc>
            </jxb:class>
          </xs:appinfo>
          <xs:documentation>The numCode/verklaring SO can be used for numeric codes and descriptions.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns:BaseServiceObject">
            <xs:sequence>
              <xs:element name="code" type="xs:int"/>
              <xs:element minOccurs="0" name="verklaring" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <!-- Simple types: Enumerations -->
      <xs:simpleType name="CalcOperation">
        <xs:annotation>
          <xs:appinfo>
            <jxb:typesafeEnumClass>
              <jxb:javadoc>This enumeration contains string values that are equal to the name.</jxb:javadoc>
            </jxb:typesafeEnumClass>
          </xs:appinfo>
          <xs:documentation>This enumeration contains string values that are equal to the name.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ADD"/>
          <xs:enumeration value="SUBTRACT"/>
          <xs:enumeration value="MULTIPLY"/>
          <xs:enumeration value="DIVIDE"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MyBoolean">
        <xs:annotation>
          <xs:appinfo>
            <jxb:typesafeEnumClass>
              <jxb:javadoc>Another simple enum type.</jxb:javadoc>
            </jxb:typesafeEnumClass>
          </xs:appinfo>
          <xs:documentation>Another simple enum type.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="TRUE"/>
          <xs:enumeration value="FALSE"/>
        </xs:restriction>
      </xs:simpleType>
      <!-- Complex types: Service Framework -->
      <xs:complexType abstract="true" name="BaseServiceObject">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class ref="org.test.services.core.api.BaseServiceObject"/>
          </xs:appinfo>
        </xs:annotation>
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="ServiceFaultInfoSO">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class ref="org.test.services.core.api.ServiceFaultInfoSO"/>
          </xs:appinfo>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="correlationId" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="meldingLijst" type="tns:ServiceMeldingSO"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
          <xs:element minOccurs="0" name="originator" type="tns:Originator"/>
          <xs:element minOccurs="0" name="type" type="tns:ExceptionType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServiceMeldingSO">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class ref="org.test.services.core.api.ServiceMeldingSO"/>
          </xs:appinfo>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="code" type="xs:string"/>
          <xs:element name="omschrijving" type="xs:string"/>
          <xs:element default="ERROR" minOccurs="0" name="type" type="tns:ServiceMeldingType"/>
          <xs:element minOccurs="0" name="variabele" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VersionSO">
        <xs:annotation>
          <xs:appinfo>
            <jxb:class ref="org.test.services.core.api.VersionSO">
            </jxb:class>
          </xs:appinfo>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns:BaseServiceObject">
            <xs:sequence>
              <xs:element name="version" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <!-- Simple types: Service Framework Enumerations -->
      <xs:simpleType name="ExceptionType">
        <xs:annotation>
          <xs:appinfo>
            <jxb:typesafeEnumClass ref="org.test.services.core.api.ExceptionType"/>
          </xs:appinfo>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="SYSTEM"/>
          <xs:enumeration value="VALIDATION"/>
          <xs:enumeration value="AUTORISATION"/>
          <xs:enumeration value="CONNECTION"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Originator">
        <xs:annotation>
          <xs:appinfo>
            <jxb:typesafeEnumClass ref="org.test.services.core.api.Originator"/>
          </xs:appinfo>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="SOAL"/>
          <xs:enumeration value="SAS"/>
          <xs:enumeration value="KIS"/>
          <xs:enumeration value="EB"/>
          <xs:enumeration value="MQ"/>
          <xs:enumeration value="JAXB"/>
          <xs:enumeration value="IDB"/>
          <xs:enumeration value="STORAGE"/>
          <xs:enumeration value="RTDS"/>
          <xs:enumeration value="DHZ"/>
          <xs:enumeration value="SMTP"/>
          <xs:enumeration value="LDAP"/>
          <xs:enumeration value="FODB"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ServiceMeldingType">
        <xs:annotation>
          <xs:appinfo>
            <jxb:typesafeEnumClass ref="org.test.services.core.api.ServiceMeldingType"/>
          </xs:appinfo>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ERROR"/>
          <xs:enumeration value="DEBUG"/>
          <xs:enumeration value="INFO"/>
          <xs:enumeration value="WARN"/>
          <xs:enumeration value="FATAL"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
  </types>
  <message name="DataTypesService_mirrorCollections">
    <part element="tns:mirrorCollections" name="mirrorCollections"/>
  </message>
  <message name="DataTypesService_mirrorCollectionsResponse">
    <part element="tns:mirrorCollectionsResponse" name="mirrorCollectionsResponse"/>
  </message>
  <message name="DataTypesService_mirrorLiterals">
    <part element="tns:mirrorLiterals" name="mirrorLiterals"/>
  </message>
  <message name="DataTypesService_mirrorLiteralsResponse">
    <part element="tns:mirrorLiteralsResponse" name="mirrorLiteralsResponse"/>
  </message>
  <message name="DataTypesService_mirrorServiceObjects">
    <part element="tns:mirrorServiceObjects" name="mirrorServiceObjects"/>
  </message>
  <message name="DataTypesService_mirrorServiceObjectsResponse">
    <part element="tns:mirrorServiceObjectsResponse" name="mirrorServiceObjectsResponse"/>
  </message>
  <message name="DataTypesService_noInputOrOutput">
    <part element="tns:noInputOrOutput" name="noInputOrOutput"/>
  </message>
  <message name="DataTypesService_noInputOrOutputResponse">
    <part element="tns:noInputOrOutputResponse" name="noInputOrOutputResponse"/>
  </message>
  <message name="DataTypesService_onlyInput">
    <part element="tns:onlyInput" name="onlyInput"/>
  </message>
  <message name="DataTypesService_onlyInputResponse">
    <part element="tns:onlyInputResponse" name="onlyInputResponse"/>
  </message>
  <message name="DataTypesService_onlyOutput">
    <part element="tns:onlyOutput" name="onlyOutput"/>
  </message>
  <message name="DataTypesService_onlyOutputResponse">
    <part element="tns:onlyOutputResponse" name="onlyOutputResponse"/>
  </message>
  <message name="DataTypesService_version">
    <part element="tns:version" name="version"/>
  </message>
  <message name="DataTypesService_versionResponse">
    <part element="tns:versionResponse" name="versionResponse"/>
  </message>
  <message name="DataTypesServiceException">
    <part element="tns:DataTypesServiceException" name="DataTypesServiceException"/>
  </message>
  <portType name="DataTypesService">
    <documentation>This service demonstrates all available data types.</documentation>
    <operation name="mirrorCollections" parameterOrder="mirrorCollections">
      <input message="tns:DataTypesService_mirrorCollections"/>
      <output message="tns:DataTypesService_mirrorCollectionsResponse"/>
      <fault message="tns:DataTypesServiceException" name="DataTypesServiceException"/>
    </operation>
    <operation name="mirrorLiterals" parameterOrder="mirrorLiterals">
      <input message="tns:DataTypesService_mirrorLiterals"/>
      <output message="tns:DataTypesService_mirrorLiteralsResponse"/>
      <fault message="tns:DataTypesServiceException" name="DataTypesServiceException"/>
    </operation>
    <operation name="mirrorServiceObjects" parameterOrder="mirrorServiceObjects">
      <input message="tns:DataTypesService_mirrorServiceObjects"/>
      <output message="tns:DataTypesService_mirrorServiceObjectsResponse"/>
      <fault message="tns:DataTypesServiceException" name="DataTypesServiceException"/>
    </operation>
    <operation name="noInputOrOutput" parameterOrder="noInputOrOutput">
      <input message="tns:DataTypesService_noInputOrOutput"/>
      <output message="tns:DataTypesService_noInputOrOutputResponse"/>
      <fault message="tns:DataTypesServiceException" name="DataTypesServiceException"/>
    </operation>
    <operation name="onlyInput" parameterOrder="onlyInput">
      <input message="tns:DataTypesService_onlyInput"/>
      <output message="tns:DataTypesService_onlyInputResponse"/>
      <fault message="tns:DataTypesServiceException" name="DataTypesServiceException"/>
    </operation>
    <operation name="onlyOutput" parameterOrder="onlyOutput">
      <input message="tns:DataTypesService_onlyOutput"/>
      <output message="tns:DataTypesService_onlyOutputResponse"/>
      <fault message="tns:DataTypesServiceException" name="DataTypesServiceException"/>
    </operation>
    <operation name="version" parameterOrder="version">
      <input message="tns:DataTypesService_version"/>
      <output message="tns:DataTypesService_versionResponse"/>
      <fault message="tns:DataTypesServiceException" name="DataTypesServiceException"/>
    </operation>
  </portType>
  <binding name="DataTypesServiceBinding" type="tns:DataTypesService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="mirrorCollections">
      <soap:operation soapAction="urn:MirrorCollections"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="DataTypesServiceException">
        <soap:fault name="DataTypesServiceException" use="literal"/>
      </fault>
    </operation>
    <operation name="mirrorLiterals">
      <soap:operation soapAction="urn:MirrorLiterals"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="DataTypesServiceException">
        <soap:fault name="DataTypesServiceException" use="literal"/>
      </fault>
    </operation>
    <operation name="mirrorServiceObjects">
      <soap:operation soapAction="urn:MirrorServiceObjects"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="DataTypesServiceException">
        <soap:fault name="DataTypesServiceException" use="literal"/>
      </fault>
    </operation>
    <operation name="noInputOrOutput">
      <soap:operation soapAction="urn:NoInputOrOutput"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="DataTypesServiceException">
        <soap:fault name="DataTypesServiceException" use="literal"/>
      </fault>
    </operation>
    <operation name="onlyInput">
      <soap:operation soapAction="urn:OnlyInput"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="DataTypesServiceException">
        <soap:fault name="DataTypesServiceException" use="literal"/>
      </fault>
    </operation>
    <operation name="onlyOutput">
      <soap:operation soapAction="urn:OnlyOutput"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="DataTypesServiceException">
        <soap:fault name="DataTypesServiceException" use="literal"/>
      </fault>
    </operation>
    <operation name="version">
      <soap:operation soapAction="urn:Version"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="DataTypesServiceException">
        <soap:fault name="DataTypesServiceException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="DataTypesServiceService">
    <!-- JAX-WS Customizations: WebServiceClient Name. -->
    <jaxws:bindings xmlns:jaxws="http://java.sun.com/xml/ns/jaxws">
      <jaxws:class name="DataTypesServiceClient"/>
    </jaxws:bindings>
    <port binding="tns:DataTypesServiceBinding" name="DataTypesServicePort">
      <soap:address location="REPLACE_WITH_ACTUAL_URL"/>
    </port>
  </service>
</definitions>
